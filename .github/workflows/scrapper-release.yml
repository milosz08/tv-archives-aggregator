name: Create scrapper app jlink and jpackage wrapper with release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version in format X.X.X"
        required: true
        default: "1.0.0"
        type: string

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          check-latest: false
          cache: "maven"

      - name: Change wrapper permissions and make build script executable
        run: |
          chmod +x ./mvnw
          chmod +x app-scrapper/build-app-linux.sh

      - name: Create native linux executable files
        run: |
          ./mvnw clean package -pl app-scrapper \
          -Dproject.version=${{ github.event.inputs.version }} \
          -Dclient.version=${{ github.event.inputs.version }}

      - name: Upload generated linux binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: |
            ./app-scrapper/target/installer/*.rpm
            ./app-scrapper/target/installer/*.deb
            ./app-scrapper/target/installer/*.AppImage
          retention-days: 1

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          check-latest: false
          cache: "maven"

      - name: Create native windows executable file
        shell: bash
        run: |
          ./mvnw clean package -pl app-scrapper \
          -Dproject.version=${{ github.event.inputs.version }} \
          -Dclient.version=${{ github.event.inputs.version }}

      - name: Upload generated windows binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: ./app-scrapper/target/installer/*.msi
          retention-days: 1

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          check-latest: false
          cache: "maven"

      - name: Change wrapper permissions and make build script executable
        run: |
          chmod +x ./mvnw
          chmod +x app-scrapper/build-app-mac.sh

      - name: Create native macos executable files
        run: |
          ./mvnw clean package -pl app-scrapper \
          -Dproject.version=${{ github.event.inputs.version }} \
          -Dclient.version=${{ github.event.inputs.version }}

      - name: Upload generated macos binaries
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: ./app-scrapper/target/installer/*.dmg
          retention-days: 1

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-windows
      - build-macos

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download generated linux binaries
        uses: actions/download-artifact@v4
        with:
          name: linux-binaries
          path: ${{ github.workspace }}/linux-binaries

      - name: Download generated windows binaries
        uses: actions/download-artifact@v4
        with:
          name: windows-binaries
          path: ${{ github.workspace }}/windows-binaries

      - name: Download generated macos binaries
        uses: actions/download-artifact@v4
        with:
          name: macos-binaries
          path: ${{ github.workspace }}/macos-binaries

      - name: Organize release files
        run: |
          mkdir ./release
          mv ./linux-binaries/* ./release/
          mv ./windows-binaries/* ./release/
          mv ./macos-binaries/* ./release/

      - name: Create signed GPG tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ github.event.inputs.version }}
          message: "Release v${{ github.event.inputs.version }}"
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}

      - name: Create GitHub Release (Draft)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          generate_release_notes: true
          files: ./release/*
          token: ${{ secrets.GITHUB_TOKEN }}
